version: '3.7'
services:
  react_app:
    image: crajaganesh/databui:v1
    restart: always
    ports:
      - "80:80"
    depends_on:
      - hasura
      - express_server
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - datab

  express_server:
    image: crajaganesh/databsvr:v1
    restart: always
    environment:
      - PORT=8082
    ports:
      - "8082:8082"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8082 || exit 1
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - datab

  postgres:
    image: postgres:15
    restart: always
    hostname: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      #POSTGRES_DB: postgres
      #POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - datab

  hasura:
    image: crajaganesh/databhasura:v1
    links:
      - postgres
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "${HASURA_GRAPHQL_DATABASE_URL}"
      HASURA_GRAPHQL_METADATA_DATABASE_URL: "${HASURA_GRAPHQL_METADATA_DATABASE_URL}"
      PG_DATABASE_URL: "${PG_DATABASE_URL}"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_GRAPHQL_MIGRATIONS_SERVER_TIMEOUT: 120
    restart: always
    networks:
      - datab
    depends_on:
      express_server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: ["./entrypoint.sh"]
    
volumes:
  db_data:
      name: db_data

networks:
  datab:
    driver: bridge
    name: datab
